name: Deploy to S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: minify javascript
        run: |
          # Install uglify-js globally
          npm install -g uglify-js

          # Find and minify JS files, excluding already minified ones
          find . -type f -name "*.js" -not -name "*.min.js" | while read -r file; do
            echo "Processing: $file"
            
            # Create temporary file
            temp_file="${file}.temp"
            
            # Minify with error handling
            if uglifyjs "$file" --compress --mangle --output "$temp_file"; then
              # Replace original with minified version
              mv "$temp_file" "$file"
              echo "Successfully minified: $file"
            else
              echo "Error minifying: $file"
              rm -f "$temp_file"
              exit 1
            fi
          done

      - name: Copy files to S3
        run: |
          S3_BUCKET="s3-apo-to-camilla-cloudfront-ec1"

          aws s3 sync \
            --delete \
            --no-progress \
            --size-only \
            --exclude ".git/**" \
            --exclude "node_modules/**" \
            --exclude "work/**" \
            --exclude "ressources/**" \
            --exclude ".github/**" \
            --exclude eslint.config.mjs \
            --exclude .gitignore \
            . s3://${S3_BUCKET}/

      - name: Invalidate CloudFront
        run: |
          echo "invilidate CloudFront cache"
          COMMAND_OUTPUT=$(aws cloudfront create-invalidation \
            --distribution-id "${{ secrets.DISTRIBUTION_ID }}" \
            --paths '/*')

          echo "wait for invalidation to complete..."
          INVALIDATION_ID=$(echo "${COMMAND_OUTPUT}" | jq -r '.Invalidation.Id')

          aws cloudfront wait invalidation-completed \
            --distribution-id "${{ secrets.DISTRIBUTION_ID }}" \
            --id "${INVALIDATION_ID}"
          echo "CloudFront cache invalidated."

          echo "Deployment complete."
          echo "Visit https://sangoku.work/ to see the changes."
